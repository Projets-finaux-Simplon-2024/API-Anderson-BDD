"""Initial migration-01

Revision ID: df1b87931758
Revises: 
Create Date: 2024-08-07 19:18:25.125400+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
from pgvector.sqlalchemy import Vector


# revision identifiers, used by Alembic.
revision: str = 'df1b87931758'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('role_name', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('author_get_doc', sa.Boolean(), nullable=True),
    sa.Column('author_post_doc', sa.Boolean(), nullable=True),
    sa.Column('author_put_doc', sa.Boolean(), nullable=True),
    sa.Column('author_patch_doc', sa.Boolean(), nullable=True),
    sa.Column('author_delete_doc', sa.Boolean(), nullable=True),
    sa.Column('author_get_collection', sa.Boolean(), nullable=True),
    sa.Column('author_post_collection', sa.Boolean(), nullable=True),
    sa.Column('author_put_collection', sa.Boolean(), nullable=True),
    sa.Column('author_patch_collection', sa.Boolean(), nullable=True),
    sa.Column('author_delete_collection', sa.Boolean(), nullable=True),
    sa.Column('author_get_user', sa.Boolean(), nullable=True),
    sa.Column('author_post_user', sa.Boolean(), nullable=True),
    sa.Column('author_put_user', sa.Boolean(), nullable=True),
    sa.Column('author_patch_user', sa.Boolean(), nullable=True),
    sa.Column('author_delete_user', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('role_id')
    )
    op.create_index(op.f('ix_roles_role_id'), 'roles', ['role_id'], unique=False)
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=30), nullable=False),
    sa.Column('passwords', sa.String(length=60), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('date_de_creation', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.role_id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_index(op.f('ix_users_user_id'), 'users', ['user_id'], unique=False)
    op.create_table('collections',
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('date_de_creation', sa.Date(), nullable=True),
    sa.Column('derniere_modification', sa.TIMESTAMP(), nullable=True),
    sa.Column('etat_bucket', sa.String(length=300)),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('collection_id')
    )
    op.create_index(op.f('ix_collections_collection_id'), 'collections', ['collection_id'], unique=False)
    op.create_table('documents',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('title_document', sa.String(length=255), nullable=False),
    sa.Column('minio_link', sa.String(length=255), nullable=False),
    sa.Column('date_de_creation', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('posted_by', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.collection_id'], ),
    sa.PrimaryKeyConstraint('document_id')
    )
    op.create_index(op.f('ix_documents_document_id'), 'documents', ['document_id'], unique=False)
    op.create_table('chunks',
    sa.Column('chunk_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('taille_chunk', sa.Integer(), nullable=False),
    sa.Column('embedding_cohere', Vector(dim=1024), nullable=True),  # Remplacez TSVectorType par Vector
    sa.Column('embedding_solon', Vector(dim=1024), nullable=True),  # Remplacez TSVectorType par Vector
    sa.Column('embedding_bge', Vector(dim=1024), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['document_id'], ['documents.document_id'], ),
    sa.PrimaryKeyConstraint('chunk_id')
    )
    op.create_index(op.f('ix_chunks_chunk_id'), 'chunks', ['chunk_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chunks_chunk_id'), table_name='chunks')
    op.drop_table('chunks')
    op.drop_index(op.f('ix_documents_document_id'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_collections_collection_id'), table_name='collections')
    op.drop_table('collections')
    op.drop_index(op.f('ix_users_user_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_roles_role_id'), table_name='roles')
    op.drop_table('roles')
    # ### end Alembic commands ###
